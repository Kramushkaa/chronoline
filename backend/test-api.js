const http = require('http');

const BASE_URL = 'http://localhost:3001';

function makeRequest(path) {
  return new Promise((resolve, reject) => {
    const req = http.get(`${BASE_URL}${path}`, (res) => {
      let data = '';
      
      res.on('data', (chunk) => {
        data += chunk;
      });
      
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data);
          resolve({ status: res.statusCode, data: jsonData });
        } catch (error) {
          resolve({ status: res.statusCode, data: data });
        }
      });
    });
    
    req.on('error', (error) => {
      reject(error);
    });
    
    req.setTimeout(5000, () => {
      req.destroy();
      reject(new Error('Timeout'));
    });
  });
}

async function testAPI() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API...\n');
  
  try {
    // –¢–µ—Å—Ç –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞
    console.log('1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –º–∞—Ä—à—Ä—É—Ç–∞:');
    const rootResult = await makeRequest('/');
    console.log(`   –°—Ç–∞—Ç—É—Å: ${rootResult.status}`);
    console.log(`   –î–∞–Ω–Ω—ã–µ: ${JSON.stringify(rootResult.data, null, 2)}\n`);
    
    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π
    console.log('2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –ª–∏—á–Ω–æ—Å—Ç–µ–π:');
    const personsResult = await makeRequest('/api/persons');
    console.log(`   –°—Ç–∞—Ç—É—Å: ${personsResult.status}`);
    console.log(`   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: ${personsResult.data.length}`);
    if (personsResult.data.length > 0) {
      console.log(`   –ü–µ—Ä–≤–∞—è –∑–∞–ø–∏—Å—å: ${personsResult.data[0].name} (${personsResult.data[0].birthYear} - ${personsResult.data[0].deathYear})`);
    }
    console.log('');
    
    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    console.log('3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π:');
    const categoriesResult = await makeRequest('/api/categories');
    console.log(`   –°—Ç–∞—Ç—É—Å: ${categoriesResult.status}`);
    console.log(`   –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoriesResult.data.join(', ')}\n`);
    
    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω
    console.log('4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω:');
    const countriesResult = await makeRequest('/api/countries');
    console.log(`   –°—Ç–∞—Ç—É—Å: ${countriesResult.status}`);
    console.log(`   –°—Ç—Ä–∞–Ω—ã: ${countriesResult.data.join(', ')}\n`);
    
    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    console.log('5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:');
    const statsResult = await makeRequest('/api/stats');
    console.log(`   –°—Ç–∞—Ç—É—Å: ${statsResult.status}`);
    console.log(`   –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`, statsResult.data.overview);
    console.log(`   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:`, statsResult.data.categories);
    console.log(`   –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç—Ä–∞–Ω–∞–º:`, statsResult.data.countries);
    console.log('');
    
    // –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏
    if (personsResult.data.length > 0) {
      console.log('6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏:');
      const personId = personsResult.data[0].id;
      const personResult = await makeRequest(`/api/persons/${personId}`);
      console.log(`   –°—Ç–∞—Ç—É—Å: ${personResult.status}`);
      console.log(`   –õ–∏—á–Ω–æ—Å—Ç—å: ${personResult.data.name}`);
      console.log('');
    }
    
    console.log('‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  }
}

testAPI(); 